///////////////////////////////////////////////////////////////////
//
// Project RENOIR
// Release Notes Instant Reporter
//
// Reference application presented in
// Clean Architecture with .NET (MS Press) 2024
// Author: Dino Esposito
// 
//

using System.ComponentModel.DataAnnotations;
using Youbiquitous.Renoir.DomainModel.Utils;

namespace Youbiquitous.Renoir.DomainModel.Documents;

/// <summary>
/// RELEASE-NOTE item entity (properties)
/// </summary>
public partial class ReleaseNoteItem : BaseEntity
{
    /// <summary>
    /// Ctor, mostly needed for EF and to save us an entire layer of DTOs
    /// </summary>
    public ReleaseNoteItem()
    {
        ItemType = ReleaseNoteItemType.Default;
    }

    /// <summary>
    /// Factory method
    /// </summary>
    /// <returns></returns>
    public static ReleaseNoteItem Default()
    {
        var category = DateTime.Now.Millisecond % 2 > 0 ? ItemCategory.Feature : ItemCategory.Bug;
        var desc = $"{DateTime.Now.Millisecond}";
        return new ReleaseNoteItem { Description = desc, Category = category };
    }

    /// <summary>
    /// Unique ID (autogenerated)
    /// </summary>
    public long RefId { get; set; }

    /// <summary>
    /// Reference to the parent ReleaseNote document (ID)
    /// </summary>
    public long DocumentId { get; set; }

    /// <summary>
    /// Reference to parent object
    /// </summary>
    public ReleaseNote RelatedDocument { get; set; }

    /// <summary>
    /// (Redundant) Reference to the product
    /// </summary>
    public long ProductId { get; set; }

    /// <summary>
    /// Position of the item in the presentation of the parent document
    /// </summary>
    public int Order { get; set; }

    /// <summary>
    /// Type of line in the release note
    /// </summary>
    public ItemCategory Category { get; set; }

    /// <summary>
    /// Notes
    /// </summary>
    [MaxLength(140)]
    public string Description { get; set; }

    /// <summary>
    /// Free text
    /// </summary>
    [MaxLength(30)]
    public string Eta { get; set; }

    /// <summary>
    /// Type of the item (text or divider)
    /// </summary>
    public ReleaseNoteItemType ItemType { get; set; }

    /// <summary>
    /// Whether the item is unchanged
    /// </summary>
    /// <param name="other"></param>
    /// <returns></returns>
    public bool SameAs(ReleaseNoteItem other)
    {
        return RefId == other.RefId &&
               DocumentId == other.DocumentId &&
               ProductId == other.ProductId &&
               Category == other.Category &&
               ItemType == other.ItemType &&
               Order == other.Order &&
               Description.NullOrEquals(other.Description) &&
               Eta.NullOrEquals(other.Eta);
    }

    /// <summary>
    /// Copy the state of another object
    /// </summary>
    public override void Import(BaseEntity entity)
    {
        var other = (ReleaseNoteItem) entity;
        Category = other.Category;
        Eta = other.Eta;
        Description = other.Description;
        Order = other.Order;
    }
}
