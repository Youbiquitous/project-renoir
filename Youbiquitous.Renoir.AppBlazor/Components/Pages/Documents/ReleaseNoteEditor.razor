@page "/rnotes"
@rendermode InteractiveServer
@using Youbiquitous.Renoir.Resources
@using Youbiquitous.Martlet.Core.Extensions
@inherits ReleaseNoteEditorPage

@{
    var docId = ParentDocumentId;
    if (RelatedDocument is null)
    { 
        <div class="fs-5 italic opacity-50">@AppMessages.Err_UnknownDocument</div>
        return;
    }

    var items = RelatedDocument.Items;
    var product = RelatedDocument.RelatedProduct;
    var title = $"{AppStrings.Text_ReleaseNote.ToUpper()}: {RelatedDocument.Version}";
}

<link href="/css/app-assets/renoir-docs.min.css" rel="stylesheet" />


<PageTitle>@title</PageTitle>

<div class="d-flex justify-content-between align-items-center bg-primary text-white p-2">
    <div>
        <button class="btn btn-primary fs-4" @onclick="BackToProduct">
            <span>@product.Name</span>
            <span class="ms-2 opacity-50">@product.Version</span>
        </button>
    </div>
    <div>
        <span class="me-2 fw-bold text-uppercase">@AppStrings.Text_ReleaseNote</span>
        <span>@RelatedDocument.Version</span>
    </div>
</div>

<StatusMessage @ref="Statusbar"
               Message="@StatusMessage"
               Delay="2500"
               CssClassSuccess="text-success fw-bold"
               CssClassError="text-danger fw-bold" />

<div class="d-flex justify-content-end m-3">
    <button class="btn btn-secondary" @onclick="AddNewItem">
        @AppMenu.NewRow
    </button>
    @if (items.Any())
    {
        <button class="ms-3 btn btn-danger" @onclick="SaveChanges">
            @AppMenu.SaveChanges
        </button>
    }
</div>


@if (items.Empty())
{
    <div class="mt-4 p-2 italic opacity-50 text-center">@AppMessages.Msg_NoRowsFound</div>
    return;
}

<div class="mb-4 d-flex justify-content-between">
    <div>
        <div>
            <span class="fw-bold me-2">@AppStrings.Label_Created</span>
            <span class="italic">@RelatedDocument.Created.DateForDisplay()</span>
            <i class="fal mx-1 fa-clock"></i>
            <span class="italic">@RelatedDocument.Created.DateForDisplay("HH:mm")</span>
        </div>
        <div style="line-height: 10px;">
            <span class="italic opacity-50">@RelatedDocument.Created.AuthorForDisplay()</span>
        </div>
    </div>
    <div>
        <div>
            <span class="fw-bold me-2">@AppStrings.Label_Modified</span>
            <span class="italic">@RelatedDocument.LastUpdated.DateForDisplay()</span>
            <i class="fal mx-1 fa-clock"></i>
            <span class="italic">@RelatedDocument.LastUpdated.DateForDisplay("HH:mm")</span>
        </div>
        <div style="line-height: 10px;">
            <span class="italic opacity-50">@RelatedDocument.LastUpdated.AuthorForDisplay()</span>
        </div>
    </div>
</div>

<div class="w-100">
    @{ var index = 1; }
    @foreach (var item in items
        .OrderBy(i => i.Order))
    {
        var css = index <= InitialNumberOfItems 
            ? "fw-bold" 
            : "text-danger opacity-50";

        <div class="d-flex w-100 align-items-center">
            <div class="@css">
                @(index++)
                <span>(@item.Order)</span>
            </div>
            <div class="ms-1">
                <button class="bg-danger text-white" 
                        @onclick="() => RemoveItem(item)">
                    <i class="fa fa-times"></i>
                </button> 
            </div>
            <div class="ms-1">
                <button @onclick="() => MoveUp(item)">
                    <i class="fa fa-chevron-up"></i>
                </button>
                <button @onclick="() => MoveDown(item)">
                    <i class="fa fa-chevron-down"></i>
                </button> 
            </div>
            <div class="ms-3 flex-grow-1">
                <ReleaseNoteLine Model="item" />
            </div>
        </div>
    }
</div>

